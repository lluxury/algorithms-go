
07-10 10:28  
// 122 用贪婪出奇的简单, 用动态规划呢?

// 做了个修改, genarate_readme.py 可以用了,刷新了最新题目

07-08 14:14  
// 动态规划的债越欠越多了, 得找个时间消化下


07-06 10:50  
// 动态规划第一题, 这个模块需要很多的时间和练习

07-05 14:19  
// 花了大量时间企图用位运算解决N皇后问题,最后还是失败了


07-04 11:48  
// 继续位运算, 平时不怎么用匿名函数的,居然用对了,吃惊
// 测试又写错了,搞的我想直接复制了


07-03 11:08  
// 231 位运算, 不为0,及 昨天结论再使用 n = n & (n - 1) == 0 为真 && 

07-02 10:57  
// 难得做出一道题,测试却写不出来, not support uint32 
// 位运算之一, n = n & (n - 1) 去除末尾的1, 这种东西也要分类记录下来啊


07-01 11:33  
// 二分法,还好, 也比较短
// 字典树代码太多,后面再消化, 测试自然也没写
// 这样,我很担心后面的动态规划啊...



06-28 11:24  
// 两天都是数独
// 这种题对我来说还是困难的, 先梳理下就好,
// 测试也不好写,要么通不过,要么一直失败


06-27 15:11  
// 对基础的要求有一些, 明天再整理吧
// 参考python不是个好办法呢

06-26 14:38  
// 最近两天都是N 皇后啊, 多写几次,熟悉一下
// 测试不能写引号呢, 自己会补上, 还有次序问题,不过还好通过了


06-24 10:57  
// 22 题需要有机会再重写一下,不是很清晰
// 没想到真的用了链表构造队列,这是合理的方法么?


06-23 09:36  
// 为什么需要写测试,就是书写的问题太多
// 在此之前,先要有积累,保证测试是正确的,并尽量多一点
// 对题目要有敬畏,正常半小时一道,不要随意
// 111 还需要细分

06-22 09:17
// 104 树的最大深度,递归,貌似效率一般啊

06-21 14:30
// 测试数据的构建还是很讲究的, 人家给的是前续的格式, 我转成嵌套时转错了
// 有输出是可以打出来的, 在最前面, lenQ=3 lenQ=4 lenQ=2 --- FAIL: Test_102

// 单体测试,强制打印
go test 102_test.go 102_binary_tree_level_order_traversal.go -v -run ^Test_102$

06-20 10:26
// 122 吸收的不太好, 解法通过但没有测试, 另一个方法涉及数学
// 只能找时间再消化了



06-18 14:58
// 今天本来是很简单的一道题,还是错了,为什么?
// 如何计算指数, 不使用现有函数



06-17 15:44
// BST 不光不好写,也不好测啊 235 好了
写测试用例注意
// 1. 多个参数用 \n 分隔 
// 2. 返回的子元素位置不能用单独一个数字表示,要写全树
// lib库还是需要的, 写成 *lib.TreeNode 原因有空分析

{Input: `(6, (0,2,(3,4,5)), (7,8,9)) \n 2 \n 8`, Output: `(6, (0,2,(3,4,5)), (7,8,9))`},

// 236 测试失败,有机会看一下本地环境



06-14 13:56
// 多个结果的时候,次序问题怎么解决?
// 目前看好像是固定次序,暂不处理
// 15 有更优秀的算法啊, 回头尝试重写一下




06-12 10:37
// 终于写出第一个测试了,不错不错
// 把ListNode 整合进来还是失败了,回头再测试

// 更新一点误解,需要的库 leetcode会自动导入
// 不用考虑自建函数需要 string 和fmt的问题

// 142 的测试写不出来,怎么做环的测试啊

// 239 最后是用树做的,先放一下好了,需要手写树的知识补充
// 不是自己写的错误好多啊

// 环境 linux ,python3
 cover.sh*
 genarate_readme.py*
 generate_code -> ../leetcode/generate.py*
 list_leetcode -> ../leetcode/list_leetcode.py*
 submit -> ../leetcode/submit.py*
// 用途未知
 // 做了一些自动化操作, 对应导入,lib,文件名的问题等
 // 可惜我全手动了

// 链接和引用还是要替换啊,不然指到原来的项目,更新显示不了
// output = subprocess.check_output(['leetcode', 'list']) 这个命令在哪,难道自己写的?

// 梳理了一下,发现没有leetcode的个命令啥都打开不了,
// 不过好事是目前还比较新,有900多题,先这么用吧


06-11 16:23
// 本地运行比较困难,被墙的包太多,建议放github上测试

// C:\Users\yann\go\src\github.com\algorithms-go\project


// 编译失败
// 覆盖率86%
// 排名 61758
// 解决 198道 ,貌似是leet上的数据,和本地没联系

// 需要解决的问题
    // file印记,没有的click需要消失
    // 了解 readme 的生成方式
    // 解决编译故障

mkdir stretchr
cd !$
git clone https://github.com/stretchr/testify.git

mkdir magiconair
cd !$
git clone https://github.com/magiconair/properties.git

cd C:\Users\yann\go\src
go test github.com\Chyroc\algorithms-go\leetcode\
// ok      github.com/Chyroc/algorithms-go/leetcode        0.341s

go test

    go test -v hello_test.go

    go test -v hello_test.go -test.run TestHello
    // 单个函数

// cover 目前不能使用, 原因待查
// 屏蔽了好多内容,勉强本地跑通
